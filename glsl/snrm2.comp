#version 450
#extension GL_KHR_shader_subgroup_arithmetic : enable

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

// For explanation of how summation works pls see 'sasum_subgroup.comp'.
// Other than that, it's pretty simple.

layout(binding = 0) buffer Buffer0 {
    float x[];
};
layout(binding = 1) buffer Output
{
   float total;
};

const int sumSubGroupSize = 64;

shared float sdata[sumSubGroupSize];

void main() {
    uint indx = gl_GlobalInvocationID.x;

    // Squares
    float sum = x[gl_GlobalInvocationID.x] * x[gl_GlobalInvocationID.x];

    // Sums
    sum = subgroupAdd(sum);

    if (subgroupElect()) sdata[gl_SubgroupID] = sum;

    barrier();

    if (gl_SubgroupID == 0)
    {
        sum = gl_SubgroupInvocationID < gl_NumSubgroups ? sdata[gl_SubgroupInvocationID] : 0;
        sum = subgroupAdd(sum);
    }

    if (gl_LocalInvocationID.x == 0) atomicAdd(total,sum);
}