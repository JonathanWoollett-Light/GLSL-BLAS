#version 450
#extension GL_KHR_shader_subgroup_arithmetic : enable
#extension GL_EXT_shader_atomic_float: enable

// sasum operation:
// + subgroup operations
// + atomics

// I beleive this is the best (fastest) version of sasum.

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0) buffer Buffer0 {
    float x[];
};
layout(binding = 1) buffer Output {
    float total[]; // total sum
};

const int sumSubGroupSize = 64; // = workgroup size / subgroup size = 1024 / 64
shared float sdata[sumSubGroupSize];

void main() {
    uint indx = gl_GlobalInvocationID.x;
    float sum = abs(x[gl_GlobalInvocationID.x]);

    // Subgroup sum
    sum = subgroupAdd(sum);

    // For 1 invocation in subgroup store sum in shared memory
    // (shared memory being memory accessible to all invocations within a workgroup)
    // `subgroupElect()` is equivalent to `gl_SubgroupInvocationID == 0`
    if (subgroupElect()) sdata[gl_SubgroupID] = sum;

    // Wait for all invocations to have summed and stored
    barrier();

    // For 1 subgroup in the workgroup
    if (gl_SubgroupID == 0)
    {
        // If the index of the invocation within the subgroup is less than the number of subgroups in the workgroup,
        //  set sum to the sum of the subgroup of the index of this invocation within the subgroup.
        // In other terms: Given we have S subgroups and I invocations to work with (where I>=S), we only need to set S of I invocations to the subgroup sums.
        sum = gl_SubgroupInvocationID < gl_NumSubgroups ? sdata[gl_SubgroupInvocationID] : 0;
        
        // Set sum to the sum of all invocations currently.
        // Each inovation is summing all invocations in this 1 subgroup and thus summing all the sums of all the subgroups in the workgroup.
        // Thus we now have the sum the workgroup stored in each of these invocations.
        sum = subgroupAdd(sum); 
    }
    // For 1 invocation in the workgroup, add the workgroup sum to the total sum
    if (gl_LocalInvocationID.x == 0) total[gl_WorkGroupID.x] = sum;
}